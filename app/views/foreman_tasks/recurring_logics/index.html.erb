<% title _("Recurring logics") %>
<% title_actions SETTINGS[:version].short <= '1.13' ? help_path : help_button %>

<table class="table table-fixed table-bordered table-striped table-condensed">
  <thead>
    <th><%= N_("Cron line") %></th>
    <th><%= N_("Task count") %></th>
    <th><%= N_("Action") %></th>
    <th><%= N_("Last occurrence") %></th>
    <th><%= N_("Next occurrence") %></th>
    <th><%= N_("Current iteration") %></th>
    <th><%= N_("Iteration limit") %></th>
    <th><%= N_("Repeat until") %></th>
    <th><%= N_("State") %></th>
    <th/>
  </thead>
  <% @recurring_logics.each do |recurring_logic| %>
    <tr>
      <td><%= link_to(recurring_logic.cron_line, foreman_tasks_recurring_logic_path(recurring_logic)) %></td>
      <td><%= link_to(recurring_logic.tasks.count, foreman_tasks_tasks_url(:search => "task_group.id = #{recurring_logic.task_group.id}")) %></td>
      <td><%= format_task_input(recurring_logic.tasks.first) %></td>
      <td><%= recurring_logic.tasks.order(:started_at).where('started_at IS NOT NULL').last.try(:started_at) || "-" %></td>
      <td><%= recurring_logic_next_occurrence recurring_logic %></td>
      <td><%= recurring_logic.iteration %></td>
      <td><%= format_recurring_logic_limit recurring_logic.max_iteration %></td>
      <td><%= format_recurring_logic_limit recurring_logic.end_time.try(:in_time_zone) %></td>
      <td><%= recurring_logic_state(recurring_logic) %></td>
      <td><%= recurring_logic_action_buttons(recurring_logic) %></td>
    </tr>
  <% end %>
</table>

<%= will_paginate_with_info @recurring_logics %>
